{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-12-14T14:36:06.840Z",
    "end": "2021-12-14T14:37:30.183Z",
    "duration": 83343,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c75017e9-c408-4057-9113-a27420e282e3",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f1ed9fff-8beb-484d-a4d7-c6515d242d34",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "f203f270-25c2-4e26-8d0d-bc4a785897d1",
              "parentUUID": "f1ed9fff-8beb-484d-a4d7-c6515d242d34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f203f270-25c2-4e26-8d0d-bc4a785897d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 284,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ed15d5ba-fe68-4a5e-b76f-89b32cfc2023",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "60717060-d397-478d-8c09-334b6310161b",
              "parentUUID": "ed15d5ba-fe68-4a5e-b76f-89b32cfc2023",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "0e756066-e81c-48b8-8bf7-1bc067fd4af1",
              "parentUUID": "ed15d5ba-fe68-4a5e-b76f-89b32cfc2023",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "91a6b882-3dab-4b1f-9538-52295e77e863",
              "parentUUID": "ed15d5ba-fe68-4a5e-b76f-89b32cfc2023",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "db52fd4b-0327-4234-b8b1-426cd24bceaa",
              "parentUUID": "ed15d5ba-fe68-4a5e-b76f-89b32cfc2023",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "e2cffa34-6a6a-497f-ad35-9db2125a5bb2",
              "parentUUID": "ed15d5ba-fe68-4a5e-b76f-89b32cfc2023",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "47e00aeb-7877-4893-a0cc-a6afb094d93f",
              "parentUUID": "ed15d5ba-fe68-4a5e-b76f-89b32cfc2023",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "9a073ba5-696a-49d4-9947-a905d9855972",
              "parentUUID": "ed15d5ba-fe68-4a5e-b76f-89b32cfc2023",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60717060-d397-478d-8c09-334b6310161b",
            "0e756066-e81c-48b8-8bf7-1bc067fd4af1",
            "91a6b882-3dab-4b1f-9538-52295e77e863",
            "db52fd4b-0327-4234-b8b1-426cd24bceaa",
            "e2cffa34-6a6a-497f-ad35-9db2125a5bb2",
            "47e00aeb-7877-4893-a0cc-a6afb094d93f",
            "9a073ba5-696a-49d4-9947-a905d9855972"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1191,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f6080802-f152-4cd4-acf9-98ad14c6a46b",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "190f7bf8-461a-4ca7-886b-4d2a83a61df8",
              "parentUUID": "f6080802-f152-4cd4-acf9-98ad14c6a46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "26efb396-87f5-4af0-8e5a-f0e3a7faff24",
              "parentUUID": "f6080802-f152-4cd4-acf9-98ad14c6a46b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "190f7bf8-461a-4ca7-886b-4d2a83a61df8",
            "26efb396-87f5-4af0-8e5a-f0e3a7faff24"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 383,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5af21a27-74f1-4678-99c1-3b2517ae513d",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "e452609a-5b25-4e1a-abc7-3b1ec34abaa9",
              "parentUUID": "5af21a27-74f1-4678-99c1-3b2517ae513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 173,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "2e76a356-9ca8-4782-b51b-d18ab6a203ab",
              "parentUUID": "5af21a27-74f1-4678-99c1-3b2517ae513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "3eefbd90-e510-4708-8cbb-1f541f2255c5",
              "parentUUID": "5af21a27-74f1-4678-99c1-3b2517ae513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "f0615f5a-aa8d-474c-a189-c054f3825748",
              "parentUUID": "5af21a27-74f1-4678-99c1-3b2517ae513d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e452609a-5b25-4e1a-abc7-3b1ec34abaa9",
            "2e76a356-9ca8-4782-b51b-d18ab6a203ab",
            "3eefbd90-e510-4708-8cbb-1f541f2255c5",
            "f0615f5a-aa8d-474c-a189-c054f3825748"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 693,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "95506a61-9d63-4ccd-9a7b-7becf6296b7a",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "38c4d2bf-3f71-44d3-98b1-3eaea5ea0c38",
              "parentUUID": "95506a61-9d63-4ccd-9a7b-7becf6296b7a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "33beb73f-6511-45d2-a1aa-b6b06f7b702b",
              "parentUUID": "95506a61-9d63-4ccd-9a7b-7becf6296b7a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38c4d2bf-3f71-44d3-98b1-3eaea5ea0c38",
            "33beb73f-6511-45d2-a1aa-b6b06f7b702b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 693,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a64e4626-8b53-40ed-ac1d-c13f1112fa2c",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "06b46cde-7d2e-4d9a-a651-553f22fec15e",
              "parentUUID": "a64e4626-8b53-40ed-ac1d-c13f1112fa2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "68e889a5-a95a-4068-b53c-e9ccb3539088",
              "parentUUID": "a64e4626-8b53-40ed-ac1d-c13f1112fa2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06b46cde-7d2e-4d9a-a651-553f22fec15e",
            "68e889a5-a95a-4068-b53c-e9ccb3539088"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 330,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5f9e2210-6f44-41c5-95d2-5b5026b21a77",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 548,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "4db98e90-c237-4d65-a05d-d8dddf1bb511",
              "parentUUID": "5f9e2210-6f44-41c5-95d2-5b5026b21a77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8786,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "430e1af5-0ddb-4698-8ba6-43896e0bb371",
              "parentUUID": "5f9e2210-6f44-41c5-95d2-5b5026b21a77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4db98e90-c237-4d65-a05d-d8dddf1bb511",
            "430e1af5-0ddb-4698-8ba6-43896e0bb371"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9334,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "37269b74-f14b-47a6-bed0-4d68d8c6fb0a",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "aa3ac6e0-169a-4389-a493-eece19020070",
              "parentUUID": "37269b74-f14b-47a6-bed0-4d68d8c6fb0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8694,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "a0c7c027-3506-4026-8d74-e83b788534ab",
              "parentUUID": "37269b74-f14b-47a6-bed0-4d68d8c6fb0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1735,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "c53fc24d-5778-4772-aacf-2106901f91e3",
              "parentUUID": "37269b74-f14b-47a6-bed0-4d68d8c6fb0a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aa3ac6e0-169a-4389-a493-eece19020070",
            "a0c7c027-3506-4026-8d74-e83b788534ab",
            "c53fc24d-5778-4772-aacf-2106901f91e3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12670,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ffcf06e9-3b38-4d79-8d5b-b332718e9aad",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "5324c407-cb3b-4d83-8d45-22c1f327d90b",
              "parentUUID": "ffcf06e9-3b38-4d79-8d5b-b332718e9aad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "7239e1d9-0495-4e3b-80e5-55c286ee3c53",
              "parentUUID": "ffcf06e9-3b38-4d79-8d5b-b332718e9aad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "aa56e7d3-a697-41dc-a53b-478da56c7e30",
              "parentUUID": "ffcf06e9-3b38-4d79-8d5b-b332718e9aad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "07caf4df-5cdf-45b7-85ae-eb4f5d71d14e",
              "parentUUID": "ffcf06e9-3b38-4d79-8d5b-b332718e9aad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5324c407-cb3b-4d83-8d45-22c1f327d90b",
            "7239e1d9-0495-4e3b-80e5-55c286ee3c53",
            "aa56e7d3-a697-41dc-a53b-478da56c7e30",
            "07caf4df-5cdf-45b7-85ae-eb4f5d71d14e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2839,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "34834bd8-b800-4086-b0a0-ac60d79b731e",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4408,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44443/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44443/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44443/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44443/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44443/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d0f465c9-e188-444e-9bd6-3cd4e1782629",
              "parentUUID": "34834bd8-b800-4086-b0a0-ac60d79b731e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4438,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44443/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44443/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44443/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44443/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44443/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b28d5d47-d559-487c-9af9-9973acc7539d",
              "parentUUID": "34834bd8-b800-4086-b0a0-ac60d79b731e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4502,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44443/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44443/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44443/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44443/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44443/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8aa101b9-52b0-4b65-852b-8fd1af5e4e92",
              "parentUUID": "34834bd8-b800-4086-b0a0-ac60d79b731e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4358,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44443/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44443/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44443/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44443/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44443/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3fdc61cb-22b3-4f9a-97fd-30fc390f924f",
              "parentUUID": "34834bd8-b800-4086-b0a0-ac60d79b731e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4399,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44443/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44443/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44443/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44443/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44443/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a2be501c-5643-40d0-82d3-e311cfd1a214",
              "parentUUID": "34834bd8-b800-4086-b0a0-ac60d79b731e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4506,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44443/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44443/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44443/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44443/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44443/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "21b3a2ae-9879-4328-8289-ddb39255925d",
              "parentUUID": "34834bd8-b800-4086-b0a0-ac60d79b731e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4417,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44443/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44443/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44443/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44443/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44443/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4f14b996-e08a-49cb-9c48-dd979bbb22bf",
              "parentUUID": "34834bd8-b800-4086-b0a0-ac60d79b731e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4351,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44443/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44443/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44443/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44443/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44443/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5ef200de-4793-40b0-a759-2d02316b8882",
              "parentUUID": "34834bd8-b800-4086-b0a0-ac60d79b731e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4362,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44443/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44443/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44443/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44443/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44443/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7c469312-ca98-44b2-99c1-629b8c53ee70",
              "parentUUID": "34834bd8-b800-4086-b0a0-ac60d79b731e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d0f465c9-e188-444e-9bd6-3cd4e1782629",
            "b28d5d47-d559-487c-9af9-9973acc7539d",
            "8aa101b9-52b0-4b65-852b-8fd1af5e4e92",
            "3fdc61cb-22b3-4f9a-97fd-30fc390f924f",
            "a2be501c-5643-40d0-82d3-e311cfd1a214",
            "21b3a2ae-9879-4328-8289-ddb39255925d",
            "4f14b996-e08a-49cb-9c48-dd979bbb22bf",
            "5ef200de-4793-40b0-a759-2d02316b8882",
            "7c469312-ca98-44b2-99c1-629b8c53ee70"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39741,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "58ccd7da-f4f7-45c8-b803-2afda5096a3b",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4363,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44443/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44443/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44443/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44443/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44443/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "19999a31-eb8f-4c7a-ba31-397e80542ede",
              "parentUUID": "58ccd7da-f4f7-45c8-b803-2afda5096a3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4379,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44443/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44443/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44443/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44443/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44443/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e121e1cd-9fcc-4ced-bdb1-335f04278f69",
              "parentUUID": "58ccd7da-f4f7-45c8-b803-2afda5096a3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4378,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44443/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44443/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44443/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44443/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44443/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44443/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e64ee9f1-15f2-4403-b090-2a735a4ffdcf",
              "parentUUID": "58ccd7da-f4f7-45c8-b803-2afda5096a3b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "19999a31-eb8f-4c7a-ba31-397e80542ede",
            "e121e1cd-9fcc-4ced-bdb1-335f04278f69",
            "e64ee9f1-15f2-4403-b090-2a735a4ffdcf"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13120,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eae5508b-45ec-47dc-9baf-6833a618e30e",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 435,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44443/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44443/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44443/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44443/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44443/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44443/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44443/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "6854d2a0-d59e-442a-82a9-5191779758c6",
              "parentUUID": "eae5508b-45ec-47dc-9baf-6833a618e30e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 438,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44443/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44443/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44443/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44443/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44443/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44443/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44443/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44443/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44443/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44443/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44443/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44443/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "758ea9d3-5cf1-4243-8d6f-422b5ced76cf",
              "parentUUID": "eae5508b-45ec-47dc-9baf-6833a618e30e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6854d2a0-d59e-442a-82a9-5191779758c6",
            "758ea9d3-5cf1-4243-8d6f-422b5ced76cf"
          ],
          "pending": [],
          "skipped": [],
          "duration": 873,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}